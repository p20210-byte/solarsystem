import streamlit as st

st.title('나의 첫 웹 서비스 만들기!!')

# 사용자 입력 받기
planet = st.selectbox('행성을 선택해주세요:', [
    '수성', '금성', '지구', '화성', '목성', '토성', '천왕성', '해왕성'
])

# MBTI 설명 데이터 (더 자세히)
planet_data = {
    '수성': {
        '특징': ' 전략적 사고와 높은 독립성을 가진 유형으로, 계획적이며 체계적입니다. '
               '논리적이고 분석적인 사고를 통해 문제를 해결하며, 목표 달성을 위해 끊임없이 노력합니다. '
               '독립적이고 자기주도적인 성향이 강해, 혼자서 일하는 것을 선호합니다.',
        '직업': '과학자, 엔지니어, 교수, 전략기획자, 데이터 분석가',
        '잘 맞는 MBTI': ['ENFP', 'ENTP']
    },

    
    '금성': {
        '특징': '이상주의적이고 감정적인 유형으로, 예술적 감각이 뛰어납니다. '
               '강한 내면의 가치를 지니고 있으며, 다른 사람의 감정을 잘 이해하고 공감합니다. '
               '창의적이고 독창적인 아이디어를 많이 가지고 있으며, 예술이나 문학 분야에서 두각을 나타냅니다.',
        '직업': '작가, 예술가, 상담사, 교사, 음악가',
        '잘 맞는 MBTI': ['ENFJ', 'ESFJ']
    },

    
    '자구': {
        '특징': '천부적인 리더십을 지닌 유형으로, 목표 지향적이고 결정력이 뛰어납니다. '
               '논리적이고 분석적인 사고를 통해 문제를 해결하며, 조직을 효율적으로 운영하는 능력이 탁월합니다. '
               '자기주장이 강하고 경쟁을 즐기며, 도전적인 환경에서 최고의 성과를 냅니다.',
        '직업': '경영자, 사업가, 변호사, 관리자, 정치인',
        '잘 맞는 MBTI': ['INFP', 'ISFP']
    },

    
    '화성': {
        '특징': '창의적이고 혁신적인 유형으로, 새로운 아이디어와 도전에 열정적입니다. '
               '논리적이고 분석적인 사고를 통해 문제를 해결하며, 다양한 분야에 관심이 많습니다. '
               '사교적이고 에너지가 넘치며, 토론을 즐기고 다른 사람과의 상호작용을 통해 발전합니다.',
        '직업': '발명가, 변호사, 마케팅 전문가, 컨설턴트, 기업가',
        '잘 맞는 MBTI': ['INFJ', 'INTJ']
    },

    
    '목성': {
        '특징': '태양계의 행성 중 가장 부피가 큰 천체이. '
               '지름이 약 14만 3000km로 지구의 약 11배의 크기이다. '
               '목성은 엷은 고리를 가지고 있으며 유명한 네 개의 갈릴레이 위성을 포함해 많은 위성을 가지고 있다.',
        '대표적인 위성': '이오, 유로파, 가니메데, 칼리스토 등',

        satellite = st.selectbox('위성을 선택해주세요:', ['이오', '유로파', '가니메데', '칼리스토'])

        satellite_data = {
            '이오' : {'갈릴레오 갈릴레이가 발견한 갈릴레이 위성 중 하나이다.'
                    '갈릴레이 위성 중에서 목성과 가장 가깝게 공전하고 있다.'
                    '태양계에서 가장 활발하게 화산 활동하는 위성이다.'
                    '목성의 자기장과 상호작용하여 40만 볼트에 달하는 전하의 흐름을 일으킨다.'
            }

            '유로파' : {'갈릴레오 갈릴레이가 발견한 갈릴레이 위성 중 하나이다.'
                     '이름의 유래는 그리스 로마 신화의 에우로페에서 따왔다.'
                     '지름은 3122km로 갈릴레이 목성 중에서 가장 작다.'
                     '태양계에서 가장 큰 바다를 가지고 있어 액체 상태의 물을 가장 많이 가지고 있다.'
            }

            '가니메데' : {'갈릴레오 갈릴레이가 발견한 갈릴레이 위성 중 하나이다.'
                      '현재까지 발견된 태양계 위성 중에서 가장 크다.(수성보다 크다.)'
                      '얇은 대기층이 100% 산소로 이루어져 있어 일반 망원경으로 관측이 가능하다.'
                      '태양계 위성 중 유일하게 자기장이 관측되며 지구처럼 오로라도 생긴다.'
            }

            '칼리스토' : {'갈릴레오 갈릴레이가 발견한 갈릴레이 위성 중 하나이다.'
                      '이름은 그리스 로마 신화에 등장하는 칼리스토에서 유래됐다.'
                      '지름이 4821km로 가니메데 다음으로 위성 중에서 크다.'
                      '목성의 자기권 외부로 궤독 나오는 유일한 갈릴레이 위성이라 지구의 달보다 밝다.'
            }
    },


    '토성': {
        '특징': '토성은 아름다운 고리를 가진 행성이다. '
               '토성은 목성에 이어 태양계에서 두 번째로 크며, 태양으로부터 약 14억km 정도 떨어져 있다. '
               '지금까지 밝혀진 토성의 위성의 개수는 274개이며, 우주선 보이저에 의해 많이 밝혀졌다.',
        '대표적인 위성': '타이탄, 엔셀라두스, 미마스 등',

        satellite = st.selectbox('위성을 선택해주세여:', ['타이탄', '엔셀라두스', '미마스'])

        satelliter_data = {
            '타이탄' : {
            }

            '엔살라두스' : {
            }

            '미마스' : {
            }
    },


    '천왕성': {
        '특징': '1781년 천문학자이자 음악가인 허셜에 의해 처음 발견되었다. '
               '천왕성은 육안이 아닌 망원경으로 발견된 최초의 행성이다. '
               '천왕성의 자전은 다른 행성들과 다르게 너무 자전축이 기울어져 있다.',
        '대표적인 위성': '세티버스, 티타니아, 미란다 등',

        satellite = st.selectbox('위성을 선택해주세여:', ['세티버스', '티타니아', '미란다'])

        satelliter_data = {
            '세티버스' : {
            }

            '티타니아' : {
            }

            '미란다' : {
            }
    },


    '해왕성': 
        {'특징': '해왕성의 대기는 천왕성의 대기와 매우 비슷해 청색을 띈다. '
               '해왕성의 자기장을 가지고 있으며, 자기장의 세기는 지구의 약 0.4배 정도이. '
               '해왕성의 위성 중에서 가장 큰 것은 트리톤이다.',
        '대표적인 위성': '트리톤, 나이아드, 탈라사 등',

         satellite = st.selectbox('위성을 선택해주세여:', ['트리톤', '나이아드', '탈라'])

         satelliter_data = {
            '타이탄' : {
            }

            '엔살라두스' : {
            }

            '미마스' : {
            }
    

if st.button('정'):
    if planet in planet_data:
        특징 = planet_data[mbti]['특징']
        대표적인 위성 = planet_data[mbti]['대표적인 위성']
        잘_맞는_mbti = ', '.join(mbti_data[mbti]['잘 맞는 MBTI'])

        st.write(f"{name}님! 당신의 MBTI 유형은 {mbti}입니다!")
        st.write(f"**특징**: {특징}")
        st.write(f"**어울리는 직업**: {직업}")
        st.write(f"**잘 맞는 MBTI 유형**: {잘_맞는_mbti}")
    else:
        st.write(f"{name}님! 아직 {mbti} 유형에 대한 정보가 없습니다.")
